stages:
  - build
  - dast_scan
  - clean_up

image: node:23-bookworm-slim

cache:
  paths:
    - node_modules/

variables:
  DOCKER_NAME: "cheulong/movies-finder-frontend"
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

# ---- BUILD IMAGE ----
build:
  stage: build
  # tags:
#    - linux-homelab-general-vm
  image: docker:latest
  services:
    - name: docker:dind
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker build -f Dockerfile.prod -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'

# ---- RUN APP ----
# This job runs the application using Docker Compose.
run_app:
  stage: dast_scan
  # tags:
#    - linux-homelab-general-vm
  image:
    name: docker:latest
  needs:
    - job: build
  # variables:
  #   DOCKER_DRIVER: overlay2
  services:
    - name: docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker pull $DOCKER_IMAGE:$DOCKER_TAG
    # - apk add --no-cache curl
  script:
    - docker run --name app --rm -d -p 80:80 $DOCKER_IMAGE:$DOCKER_TAG
    - sleep 15 # wait for app to start
    # - curl -f http://localhost:80 || exit 1
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
curl:
  stage: dast_scan
  image: curlimages/curl:latest
  services:
    - name: $DOCKER_IMAGE:$DOCKER_TAG
      alias: app
  script:
    - curl http://app:80
  needs: [run_app]
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
# ---- OWASP ZAP ----
# This job runs the OWASP ZAP security scanner against the application.
owap_zap:
  stage: dast_scan
  # tags:
#    - linux-homelab-general-vm
  image: zaproxy/zap-stable
  services:
    - name: $DOCKER_IMAGE:$DOCKER_TAG
      alias: app
  before_script:
    - mkdir -p /zap/wrk
  script:
    - echo 'owap zap'
    - zap-baseline.py -t http://app:80 -g gen.conf -r zap-report.html || true
    - cp /zap/wrk/zap-report.html .
    # full scan: zap-full-scan.py
    # api scan: zap-api-scan.py
  needs: [run_app]
  artifacts:
    expire_in: "30 days"
    when: always
    paths:
      - zap-report.html
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  allow_failure: true

# --- Clean up ---
clean_up:
  stage: clean_up
  # tags:
#    - linux-homelab-general-vm
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  script:
    - echo "Stop docker container"
    - docker stop app || true
    - echo "Cleaning up temporary files"
    - rm -rf node_modules/
  rules:
    - when: always
  allow_failure: true

# End of file